<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.suite.venus.job.admin.mapper.XxlJobLogMapper">
	
	<resultMap id="XxlJobLog" type="io.suite.venus.job.admin.core.model.XxlJobLog" >
		<result column="id" property="id" />

		<result column="job_group" property="jobGroup" />
		<result column="job_id" property="jobId" />

		<result column="executor_address" property="executorAddress" />
		<result column="executor_handler" property="executorHandler" />
	    <result column="executor_param" property="executorParam" />
		<result column="executor_sharding_param" property="executorShardingParam" />
		<result column="executor_fail_retry_count" property="executorFailRetryCount" />
	    
	    <result column="trigger_time" property="triggerTime" />
	    <result column="trigger_code" property="triggerCode" />
	    <result column="trigger_msg" property="triggerMsg" />
	    
	    <result column="handle_time" property="handleTime" />
	    <result column="handle_code" property="handleCode" />
	    <result column="handle_msg" property="handleMsg" />

		<result column="alarm_status" property="alarmStatus" />
	</resultMap>

	<sql id="Base_Column_List">
		t.id,
		t.job_group,
		t.job_id,
		t.executor_address,
		t.executor_handler,
		t.executor_param,
		t.executor_sharding_param,
		t.executor_fail_retry_count,
		t.trigger_time,
		t.trigger_code,
		t.trigger_msg,
		t.handle_time,
		t.handle_code,
		t.handle_msg,
		t.alarm_status
	</sql>
	
	<select id="pageList" resultMap="XxlJobLog">
		SELECT <include refid="Base_Column_List" />
		FROM XXL_JOB_QRTZ_TRIGGER_LOG AS t
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="jobGroup gt 0">
				AND t.job_group = #{jobGroup}
			</if>
			<if test="jobId gt 0">
				AND t.job_id = #{jobId}
			</if>
			<if test="triggerTimeStart != null">
				AND t.trigger_time <![CDATA[ >= ]]> #{triggerTimeStart}
			</if>
			<if test="triggerTimeEnd != null">
				AND t.trigger_time <![CDATA[ <= ]]> #{triggerTimeEnd}
			</if>
			<if test="logStatus == 1" >
				AND t.handle_code = 200
			</if>
			<if test="logStatus == 2" >
				AND (
					t.trigger_code NOT IN (0, 200) OR
					t.handle_code NOT IN (0, 200)
				)
			</if>
			<if test="logStatus == 3" >
				AND t.trigger_code = 200
				AND t.handle_code = 0
			</if>
			<if test="email != null and email != ''">
				AND t.job_group  in (  SELECT
				id FROM xxl_job_qrtz_trigger_group
				WHERE	namespace_id IN (
				SELECT namespace_id FROM xxl_job_qrtz_user_namespace
				WHERE email = #{email})
				)
			</if>

		</trim>
		ORDER BY t.trigger_time DESC

	</select>
	
	<select id="pageListCount" resultType="int">
		SELECT count(1)
		FROM XXL_JOB_QRTZ_TRIGGER_LOG AS t
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="jobId==0 and jobGroup gt 0">
				AND t.job_group = #{jobGroup}
			</if>
			<if test="jobId gt 0">
				AND t.job_id = #{jobId}
			</if>
			<if test="triggerTimeStart != null">
				AND t.trigger_time <![CDATA[ >= ]]> #{triggerTimeStart}
			</if>
			<if test="triggerTimeEnd != null">
				AND t.trigger_time <![CDATA[ <= ]]> #{triggerTimeEnd}
			</if>
			<if test="logStatus == 1" >
				AND t.handle_code = 200
			</if>
			<if test="logStatus == 2" >
				AND (
					t.trigger_code NOT IN (0, 200) OR
					t.handle_code NOT IN (0, 200)
				)
			</if>
			<if test="logStatus == 3" >
				AND t.trigger_code = 200
				AND t.handle_code = 0
			</if>
		</trim>
	</select>
	
	<select id="load" parameterType="java.lang.Integer" resultMap="XxlJobLog">
		SELECT <include refid="Base_Column_List" />
		FROM XXL_JOB_QRTZ_TRIGGER_LOG AS t
		WHERE t.id = #{id}
	</select>

	
	<insert id="save" parameterType="io.suite.venus.job.admin.core.model.XxlJobLog" useGeneratedKeys="true"
            keyProperty="xxlJobLog.id" >
		INSERT INTO XXL_JOB_QRTZ_TRIGGER_LOG (
			`job_group`,
			`job_id`,
			`trigger_time`,
			`trigger_code`,
			`handle_code`,
		    `trigger_Day`
		) VALUES (
			#{xxlJobLog.jobGroup},
			#{xxlJobLog.jobId},
			#{xxlJobLog.triggerTime},
			#{xxlJobLog.triggerCode},
			#{xxlJobLog.handleCode},
		    #{xxlJobLog.triggerDay}
		);
		<!--<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID() 
		</selectKey>-->
	</insert>

	<update id="updateTriggerInfo" >
		UPDATE XXL_JOB_QRTZ_TRIGGER_LOG
		SET
			`trigger_time`= #{xxlJobLog.triggerTime},
			`trigger_code`= #{xxlJobLog.triggerCode},
			`trigger_msg`= #{xxlJobLog.triggerMsg},
			`executor_address`= #{xxlJobLog.executorAddress},
			`executor_handler`=#{xxlJobLog.executorHandler},
			`executor_param`= #{xxlJobLog.executorParam},
			`executor_sharding_param`= #{xxlJobLog.executorShardingParam},
			`executor_fail_retry_count`= #{xxlJobLog.executorFailRetryCount}
		WHERE `id`= #{xxlJobLog.id}
	</update>

	<update id="updateHandleInfo">
		UPDATE XXL_JOB_QRTZ_TRIGGER_LOG
		SET 
			`handle_time`= #{xxlJobLog.handleTime},
			`handle_code`= #{xxlJobLog.handleCode},
			`handle_msg`= #{xxlJobLog.handleMsg}
		WHERE `id`= #{xxlJobLog.id}
	</update>
	
	<delete id="delete" >
		delete from XXL_JOB_QRTZ_TRIGGER_LOG
		WHERE job_id = #{jobId}
	</delete>

	<select id="triggerCountByHandleCode" resultType="int" >
		SELECT count(1)
		FROM XXL_JOB_QRTZ_TRIGGER_LOG AS t
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="handleCode gt 0">
				AND t.handle_code = #{handleCode}
			</if>
		</trim>
	</select>

    <select id="triggerCountByDay" resultType="java.util.Map" >
		SELECT
			trigger_Day triggerDay,
			COUNT(handle_code) triggerDayCount,
			SUM(CASE WHEN (trigger_code in (0, 200) and handle_code = 0) then 1 else 0 end) as triggerDayCountRunning,
			SUM(CASE WHEN handle_code = 200 then 1 else 0 end) as triggerDayCountSuc
		FROM XXL_JOB_QRTZ_TRIGGER_LOG
		WHERE trigger_time BETWEEN #{from} and #{to}
		GROUP BY triggerDay;
    </select>

	<delete id="clearLog" >
		delete from XXL_JOB_QRTZ_TRIGGER_LOG
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="jobGroup gt 0">
				AND job_group = #{jobGroup}
			</if>
			<if test="jobId gt 0">
				AND job_id = #{jobId}
			</if>
			<if test="clearBeforeTime != null">
				AND trigger_time <![CDATA[ <= ]]> #{clearBeforeTime}
			</if>
			<if test="clearBeforeNum gt 0">
				AND id NOT in(
					SELECT id FROM(
						SELECT id FROM XXL_JOB_QRTZ_TRIGGER_LOG AS t
						<trim prefix="WHERE" prefixOverrides="AND | OR" >
							<if test="jobGroup gt 0">
								AND t.job_group = #{jobGroup}
							</if>
							<if test="jobId gt 0">
								AND t.job_id = #{jobId}
							</if>
						</trim>
						ORDER BY t.trigger_time desc
						LIMIT 0, #{clearBeforeNum}
					) t1
				)
			</if>
		</trim>
	</delete>

	<select id="findFailJobLogIds" resultType="int" >
		SELECT id FROM `XXL_JOB_QRTZ_TRIGGER_LOG`
		WHERE !(
			(trigger_code in (0, 200) and handle_code = 0)
			OR
			(handle_code = 200)
		)
		AND `alarm_status` = 0
		ORDER BY id ASC
	</select>
	<select id="getOperLogPageList" resultType="io.suite.venus.job.admin.domain.dto.OperaLogRes">

		select id,
			   username    userName,
			   event_name  eventName,
			   user_email  userEmail,
			   ip,
			   url,
			   params,
			   create_time createTime
		from xxl_job_qrtz_operate_log
		where username is not null order by  id desc

	</select>

	<update id="updateAlarmStatus" >
		UPDATE XXL_JOB_QRTZ_TRIGGER_LOG
		SET
			`alarm_status` = #{newAlarmStatus}
		WHERE `id`= #{logId} AND `alarm_status` = #{oldAlarmStatus}
	</update>


	<delete id="clearLogByDay" >
		delete from XXL_JOB_QRTZ_TRIGGER_LOG where trigger_time <![CDATA[ <= ]]> #{clearBeforeTime}
			limit 5000
	</delete>


	<delete id="clearServerLogByDay" >
		delete from xxl_job_server_info_his where create_time <![CDATA[ <= ]]> #{clearBeforeTime}
			limit 5000
	</delete>
	
</mapper>